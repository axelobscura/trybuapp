{"version":3,"sources":["reducers/index.js","reducers/comments.js","actions/types.js","reducers/auth.js","Root.js","actions/index.js","components/CommentBox.js","components/CommentList.js","components/App.js","index.js"],"names":["combineReducers","comments","state","action","type","payload","data","map","comment","name","auth","children","initialState","store","createStore","reducers","applyMiddleware","reduxPromise","saveComment","fetchComments","axios","get","changeAuth","isLoggedIn","CommentBox","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","this","shouldNavigateAway","history","push","onSubmit","onChange","className","onClick","Component","connect","actions","CommentList","key","renderComments","App","to","renderButton","renderHeader","path","component","exact","ReactDOM","render","Root","document","querySelector"],"mappings":"0XAIeA,cAAgB,CAC3BC,SCHW,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACnC,OAAQA,EAAOC,MACX,ICJoB,eDKhB,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAC7B,ICLsB,iBDMlB,IAAMJ,EAAWE,EAAOE,QAAQC,KAAKC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,QAC5D,MAAM,GAAN,mBAAWP,GAAX,YAAqBD,IACzB,QACI,OAAOC,IDJfQ,KGJW,WAAkC,IAAxBR,EAAuB,wDAARC,EAAQ,uCAC5C,OAAQA,EAAOC,MACX,IDFmB,cCGf,OAAOD,EAAOE,QAClB,QACI,OAAOH,MCDJ,cAAsC,IAAnCS,EAAkC,EAAlCA,SAAkC,IAAxBC,oBAAwB,MAAT,GAAS,EAC1CC,EAAQC,YAAYC,EAAUH,EAAcI,YAAgBC,MAClE,OACI,kBAAC,IAAD,CAAUJ,MAAOA,GACZF,I,iDCPN,SAASO,EAAYV,GACxB,MAAO,CACHJ,KHLoB,eGMpBC,QAASG,GAIV,SAASW,IAEZ,MAAO,CACHf,KHZsB,iBGatBC,QAHae,IAAMC,IAAI,iDAOxB,SAASC,EAAWC,GACvB,MAAO,CACHnB,KHlBmB,cGmBnBC,QAASkB,G,ICjBXC,E,4MACFtB,MAAQ,CACJM,QAAS,I,EAabiB,aAAe,SAAAC,GACX,EAAKC,SAAS,CACVnB,QAASkB,EAAME,OAAOC,S,EAG9BC,aAAe,SAAAJ,GACXA,EAAMK,iBACN,EAAKC,MAAMd,YAAY,EAAKhB,MAAMM,SAClC,EAAKmB,SAAS,CACVnB,QAAS,M,kEAnBbyB,KAAKC,uB,2CAGLD,KAAKC,uB,2CAGAD,KAAKD,MAAMtB,MACZuB,KAAKD,MAAMG,QAAQC,KAAK,O,+BAgB5B,OACI,6BACI,0BAAMC,SAAUJ,KAAKH,cACjB,6CACA,8BAAUQ,SAAUL,KAAKR,aAAcI,MAAOI,KAAK/B,MAAMM,UACzD,6BACI,oDAGR,4BAAQ+B,UAAU,iBAAiBC,QAASP,KAAKD,MAAMb,eAAvD,uB,GArCSsB,aAkDVC,mBANf,SAAyBxC,GACrB,MAAO,CACHQ,KAAMR,EAAMQ,QAIoBiC,EAAzBD,CAAkClB,GCnD3CoB,E,+KAEE,OAAOX,KAAKD,MAAM/B,SAASM,KAAI,SAAAC,GAC3B,OAAO,wBAAIqC,IAAKrC,GAAUA,Q,+BAI9B,OACI,6BACI,4CACA,4BACKyB,KAAKa,uB,GAXAL,aAsBXC,mBAJf,SAAyBxC,GACrB,MAAO,CAAED,SAAUC,EAAMD,YAGdyC,CAAyBE,GClBlCG,E,6KACc,IAAD,OACX,OAAId,KAAKD,MAAMtB,KAEP,4BAAQ8B,QAAS,kBAAM,EAAKR,MAAMV,YAAW,KAA7C,YAMA,4BAAQkB,QAAS,kBAAM,EAAKR,MAAMV,YAAW,KAA7C,a,qCAOR,OACI,4BACI,4BACI,kBAAC,IAAD,CAAM0B,GAAG,KAAT,WAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,SAAT,UAEJ,4BACKf,KAAKgB,mB,+BAMlB,OACI,6BACKhB,KAAKiB,eACN,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAW5B,IAC/B,kBAAC,IAAD,CAAO2B,KAAK,IAAIE,OAAK,EAACD,UAAWR,S,GApC/BH,aA8CHC,mBAJf,SAAyBxC,GACrB,MAAO,CAAEQ,KAAMR,EAAMQ,QAGeiC,EAAzBD,CAAkCK,GC/CjDO,IAASC,OACL,kBAACC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOL,KAAK,IAAIC,UAAWL,MAGnCU,SAASC,cAAc,Y","file":"static/js/main.8fc0abb6.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport commentsReducer from 'reducers/comments';\nimport authReducer from 'reducers/auth';\n\nexport default combineReducers({\n    comments: commentsReducer,\n    auth: authReducer\n})","import { SAVE_COMMENT, FETCH_COMMENTS } from 'actions/types';\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case SAVE_COMMENT:\n            return [...state, action.payload]\n        case FETCH_COMMENTS:\n            const comments = action.payload.data.map(comment => comment.name);\n            return [...state, ...comments]\n        default:\n            return state;\n    }\n}","export const SAVE_COMMENT = 'save_comment';\nexport const FETCH_COMMENTS = 'fetch_comments';\nexport const CHANGE_AUTH = 'change_auth';","import { CHANGE_AUTH } from 'actions/types';\n\nexport default function (state = false, action) {\n    switch (action.type) {\n        case CHANGE_AUTH:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxPromise from 'redux-promise';\nimport reducers from 'reducers';\n\nexport default ({ children, initialState = {} }) => {\n    const store = createStore(reducers, initialState, applyMiddleware(reduxPromise));\n    return (\n        <Provider store={store}>\n            {children}\n        </Provider>\n    )\n}","import axios from 'axios';\nimport { SAVE_COMMENT, FETCH_COMMENTS, CHANGE_AUTH } from 'actions/types';\n\nexport function saveComment(comment) {\n    return {\n        type: SAVE_COMMENT,\n        payload: comment\n    }\n};\n\nexport function fetchComments() {\n    const response = axios.get('http://jsonplaceholder.typicode.com/comments');\n    return {\n        type: FETCH_COMMENTS,\n        payload: response\n    }\n};\n\nexport function changeAuth(isLoggedIn) {\n    return {\n        type: CHANGE_AUTH,\n        payload: isLoggedIn\n    }\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\n\nclass CommentBox extends Component {\n    state = {\n        comment: ''\n    }\n    componentDidMount() {\n        this.shouldNavigateAway();\n    }\n    componentDidUpdate() {\n        this.shouldNavigateAway();\n    }\n    shouldNavigateAway() {\n        if (!this.props.auth) {\n            this.props.history.push('/');\n        }\n    }\n    handleChange = event => {\n        this.setState({\n            comment: event.target.value\n        })\n    }\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.saveComment(this.state.comment);\n        this.setState({\n            comment: ''\n        })\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <h4>Add a comment</h4>\n                    <textarea onChange={this.handleChange} value={this.state.comment} />\n                    <div>\n                        <button>Submit Comment</button>\n                    </div>\n                </form>\n                <button className=\"fetch-comments\" onClick={this.props.fetchComments}>Fetch Comments</button>\n            </div>\n\n        )\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps, actions)(CommentBox);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CommentList extends Component {\n    renderComments() {\n        return this.props.comments.map(comment => {\n            return <li key={comment}>{comment}</li>\n        })\n    }\n    render() {\n        return (\n            <div>\n                <h4>Comment List</h4>\n                <ul>\n                    {this.renderComments()}\n                </ul>\n            </div>\n        )\n    }\n};\n\nfunction mapStateToProps(state) {\n    return { comments: state.comments };\n}\n\nexport default connect(mapStateToProps)(CommentList);","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CommentBox from 'components/CommentBox';\nimport CommentList from 'components/CommentList';\nimport * as actions from 'actions';\n\nclass App extends Component {\n    renderButton() {\n        if (this.props.auth) {\n            return (\n                <button onClick={() => this.props.changeAuth(false)}>\n                    Sign Out\n                </button>\n            )\n        } else {\n            return (\n                <button onClick={() => this.props.changeAuth(true)}>\n                    Sign In\n                </button>\n            )\n        }\n    }\n    renderHeader() {\n        return (\n            <ul>\n                <li>\n                    <Link to=\"/\">Inicio</Link>\n                </li>\n                <li>\n                    <Link to=\"/post\">Posts</Link>\n                </li>\n                <li>\n                    {this.renderButton()}\n                </li>\n            </ul>\n        )\n    }\n    render() {\n        return (\n            <div>\n                {this.renderHeader()}\n                <Route path=\"/post\" component={CommentBox} />\n                <Route path=\"/\" exact component={CommentList} />\n            </div>\n        )\n    }\n};\n\nfunction mapStateToProps(state) {\n    return { auth: state.auth };\n}\n\nexport default connect(mapStateToProps, actions)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Root from 'Root';\nimport App from 'components/App';\n\nReactDOM.render(\n    <Root>\n        <BrowserRouter>\n            <Route path=\"/\" component={App} />\n        </BrowserRouter>\n    </Root>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}